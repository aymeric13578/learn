openapi: 3.0.0
info:
  title: E-Learning Platform API
  description: API for managing users, courses, payments, recommendations, and more.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging.example.com/v1
    description: Staging server

paths:
  # User Management
  /users:
    get:
      summary: List all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
        required: true
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
        required: true
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found

  # Courses
  /courses:
    get:
      summary: List all courses
      responses:
        '200':
          description: A list of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Create a new course
      requestBody:
        description: Course to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseInput'
        required: true
      responses:
        '201':
          description: Course created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{courseId}:
    get:
      summary: Get a course by ID
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '404':
          description: Course not found
    put:
      summary: Update a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      requestBody:
        description: Updated course information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseInput'
        required: true
      responses:
        '200':
          description: Course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '404':
          description: Course not found
    delete:
      summary: Delete a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Course deleted
        '404':
          description: Course not found

  # Payments
  /payments:
    post:
      summary: Process a payment
      requestBody:
        description: Payment details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInput'
        required: true
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  # Recommendations
  /recommendations/{userId}:
    get:
      summary: Get course recommendations for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of recommended courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

  # Enrollment
  /enrollments:
    get:
      summary: List all enrollments
      responses:
        '200':
          description: A list of enrollments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
    post:
      summary: Enroll a user in a course
      requestBody:
        description: Enrollment information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentInput'
        required: true
      responses:
        '201':
          description: Enrollment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'

  # Reviews
  /reviews/{courseId}:
    get:
      summary: List reviews for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of reviews for the course
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
    post:
      summary: Create a new review for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      requestBody:
        description: Review to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
        required: true
      responses:
        '201':
          description: Review created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'

  /reviews/{reviewId}:
    get:
      summary: Get a review by ID
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Review details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Review not found
    delete:
      summary: Delete a review
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Review deleted
        '404':
          description: Review not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time

    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    Course:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        category:
          type: string
        created_at:
          type: string
          format: date-time

    CourseInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string

    Enrollment:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        course_id:
          type: string
        enrolled_at:
          type: string
          format: date-time

    EnrollmentInput:
      type: object
      properties:
        user_id:
          type: string
        course_id:
          type: string

    Review:
      type: object
      properties:
        id:
          type: string
        course_id:
          type: string
        user_id:
          type: string
        rating:
          type: integer
          format: int32
        content:
          type: string
        created_at:
          type: string
          format: date-time

    ReviewInput:
      type: object
      properties:
        course_id:
          type: string
        user_id:
          type: string
        rating:
          type: integer
          format: int32
        content:
          type: string

    PaymentInput:
      type: object
      properties:
        amount:
          type: number
          format: float
        method:
          type: string
        currency:
          type: string

    PaymentResponse:
      type: object
      properties:
        transaction_id:
          type: string
        status:
          type: string
        message:
          type: string

    Recommendation:
      type: object
      properties:
        course_id:
          type: string
        score:
          type: number
          format: float

    RecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/Recommendation'
